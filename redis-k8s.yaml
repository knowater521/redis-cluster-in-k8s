apiVersion: v1
kind: Service
metadata:
  labels:
    app: redis
  name: redis-cluster
  namespace: redis
spec:
  clusterIP: None
  ports:
  - name: redis-port
    port: 7000
    protocol: TCP
    targetPort: 7000
  selector:
    redisCluster: redis-cluster
  type: ClusterIP

---
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: redis
spec:
  serviceName: "redis-cluster"
  replicas: 6
  selector:
    matchLabels:
      redisCluster: redis-cluster
  template:
    metadata:
      labels:
        redisCluster: redis-cluster
    spec:
      containers:
      - name: redis
        env:
        - name: PASSWORD
          value: abcdef
        - name: REDIS_SERVICE_NAME
          value: redis-cluster
        - name: REDIS_CONFIG_FILE
          value: /data/redis.conf
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: "registry.com:8500/library/redis:5.0.3-cluster"
        imagePullPolicy: Always
        ports:
            - name: redis
              containerPort: 7000
              protocol: "TCP"
            - name: cluster
              containerPort: 16379
              protocol: "TCP"
        readinessProbe:
          tcpSocket:
            port: 7000
        volumeMounts:
          - name: "redis-data"
            mountPath: "/data"
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: [ "ReadWriteMany" ]
      resources:
        requests:
          storage: 200M
